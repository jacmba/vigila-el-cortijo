name: Actions

on:
  pull_request: {}
  push: { branches: [master] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  build:
    name: Build ${{ matrix.targetPlatform }} with Unity ${{ matrix.unityVersion }}
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.4.14f1
        targetPlatform:
          - StandaloneLinux64
          - StandaloneWindows64
          - StandaloneOSX
    steps:
      # Checkout
      - uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library

      # Tests
      - name: Run tests
        uses: game-ci/unity-test-runner@v1.3
        with:
          unityVersion: ${{ matrix.unityVersion }}
          testMode: editmode

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v0.10
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      # Zip build folder
      - name: Zip build folder
        uses: papeloto/action-zip@v1
        with:
          files: build/${{ matrix.targetPlatform }}
          dest: VigilaElCortijo-SNAPSHOT-${{ matrix.targetPlatform }}.zip

      # Show dir output
      - run: ls -lR

      # Get timestamp
      - run: TIMESTAMP=$(date +%s)

      # Publish release asset
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: "https://uploads.github.com/repos/jacmba/vigila-el-cortijo/releases/38792365/assets{?name,label}"
          asset_path: ./VigilaElCortijo-SNAPSHOT-${{ matrix.targetPlatform }}.zip
          asset_name: VigilaElCortijo-SNAPSHOT_${{ TIMESTAMP }}-${{ matrix.targetPlatform }}.zip
          asset_content_type: application/zip
